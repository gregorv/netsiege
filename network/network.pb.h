// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network/network.proto

#ifndef PROTOBUF_network_2fnetwork_2eproto__INCLUDED
#define PROTOBUF_network_2fnetwork_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "oms/objects.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_network_2fnetwork_2eproto();
void protobuf_AssignDesc_network_2fnetwork_2eproto();
void protobuf_ShutdownFile_network_2fnetwork_2eproto();

class Action;
class NetworkMessage;

enum MessageType {
  MT_ACTION = 0,
  MT_STATE_REFRESH = 1,
  MT_FULL_COPY = 2,
  MT_MESSAGE = 3,
  MT_SERVER_COMMAND = 4
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MT_ACTION;
const MessageType MessageType_MAX = MT_SERVER_COMMAND;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class Action : public ::google::protobuf::Message {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  Action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Action)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2fnetwork_2eproto();
  friend void protobuf_AssignDesc_network_2fnetwork_2eproto();
  friend void protobuf_ShutdownFile_network_2fnetwork_2eproto();

  void InitAsDefaultInstance();
  static Action* default_instance_;
};
// -------------------------------------------------------------------

class NetworkMessage : public ::google::protobuf::Message {
 public:
  NetworkMessage();
  virtual ~NetworkMessage();

  NetworkMessage(const NetworkMessage& from);

  inline NetworkMessage& operator=(const NetworkMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetworkMessage& default_instance();

  void Swap(NetworkMessage* other);

  // implements Message ----------------------------------------------

  NetworkMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetworkMessage& from);
  void MergeFrom(const NetworkMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .MessageType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::MessageType type() const;
  inline void set_type(::MessageType value);

  // optional .Action action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline const ::Action& action() const;
  inline ::Action* mutable_action();
  inline ::Action* release_action();
  inline void set_allocated_action(::Action* action);

  // @@protoc_insertion_point(class_scope:NetworkMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Action* action_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2fnetwork_2eproto();
  friend void protobuf_AssignDesc_network_2fnetwork_2eproto();
  friend void protobuf_ShutdownFile_network_2fnetwork_2eproto();

  void InitAsDefaultInstance();
  static NetworkMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// Action

// -------------------------------------------------------------------

// NetworkMessage

// required .MessageType type = 1;
inline bool NetworkMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetworkMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetworkMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::MessageType NetworkMessage::type() const {
  return static_cast< ::MessageType >(type_);
}
inline void NetworkMessage::set_type(::MessageType value) {
  assert(::MessageType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .Action action = 3;
inline bool NetworkMessage::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkMessage::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetworkMessage::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetworkMessage::clear_action() {
  if (action_ != NULL) action_->::Action::Clear();
  clear_has_action();
}
inline const ::Action& NetworkMessage::action() const {
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::Action* NetworkMessage::mutable_action() {
  set_has_action();
  if (action_ == NULL) action_ = new ::Action;
  return action_;
}
inline ::Action* NetworkMessage::release_action() {
  clear_has_action();
  ::Action* temp = action_;
  action_ = NULL;
  return temp;
}
inline void NetworkMessage::set_allocated_action(::Action* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageType>() {
  return ::MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_network_2fnetwork_2eproto__INCLUDED
