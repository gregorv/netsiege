// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: objects.proto

#ifndef PROTOBUF_objects_2eproto__INCLUDED
#define PROTOBUF_objects_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace oms {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_objects_2eproto();
void protobuf_AssignDesc_objects_2eproto();
void protobuf_ShutdownFile_objects_2eproto();

class ComponentScript;
class ComponentGraphics;
class Object;
class Object_Component;
class ObjectSet;

enum ComponentType {
  COMP_GRAPHICS = 0,
  COMP_SCRIPT = 1
};
bool ComponentType_IsValid(int value);
const ComponentType ComponentType_MIN = COMP_GRAPHICS;
const ComponentType ComponentType_MAX = COMP_SCRIPT;
const int ComponentType_ARRAYSIZE = ComponentType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ComponentType_descriptor();
inline const ::std::string& ComponentType_Name(ComponentType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ComponentType_descriptor(), value);
}
inline bool ComponentType_Parse(
    const ::std::string& name, ComponentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ComponentType>(
    ComponentType_descriptor(), name, value);
}
// ===================================================================

class ComponentScript : public ::google::protobuf::Message {
 public:
  ComponentScript();
  virtual ~ComponentScript();

  ComponentScript(const ComponentScript& from);

  inline ComponentScript& operator=(const ComponentScript& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentScript& default_instance();

  void Swap(ComponentScript* other);

  // implements Message ----------------------------------------------

  ComponentScript* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComponentScript& from);
  void MergeFrom(const ComponentScript& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string class_name = 1;
  inline bool has_class_name() const;
  inline void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  inline const ::std::string& class_name() const;
  inline void set_class_name(const ::std::string& value);
  inline void set_class_name(const char* value);
  inline void set_class_name(const char* value, size_t size);
  inline ::std::string* mutable_class_name();
  inline ::std::string* release_class_name();
  inline void set_allocated_class_name(::std::string* class_name);

  // required uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // required string serializedObjectData = 3;
  inline bool has_serializedobjectdata() const;
  inline void clear_serializedobjectdata();
  static const int kSerializedObjectDataFieldNumber = 3;
  inline const ::std::string& serializedobjectdata() const;
  inline void set_serializedobjectdata(const ::std::string& value);
  inline void set_serializedobjectdata(const char* value);
  inline void set_serializedobjectdata(const char* value, size_t size);
  inline ::std::string* mutable_serializedobjectdata();
  inline ::std::string* release_serializedobjectdata();
  inline void set_allocated_serializedobjectdata(::std::string* serializedobjectdata);

  // @@protoc_insertion_point(class_scope:oms.ComponentScript)
 private:
  inline void set_has_class_name();
  inline void clear_has_class_name();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_serializedobjectdata();
  inline void clear_has_serializedobjectdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* class_name_;
  ::google::protobuf::uint64 object_id_;
  ::std::string* serializedobjectdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();

  void InitAsDefaultInstance();
  static ComponentScript* default_instance_;
};
// -------------------------------------------------------------------

class ComponentGraphics : public ::google::protobuf::Message {
 public:
  ComponentGraphics();
  virtual ~ComponentGraphics();

  ComponentGraphics(const ComponentGraphics& from);

  inline ComponentGraphics& operator=(const ComponentGraphics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentGraphics& default_instance();

  void Swap(ComponentGraphics* other);

  // implements Message ----------------------------------------------

  ComponentGraphics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComponentGraphics& from);
  void MergeFrom(const ComponentGraphics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 entity_id = 1;
  inline bool has_entity_id() const;
  inline void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  inline ::google::protobuf::uint64 entity_id() const;
  inline void set_entity_id(::google::protobuf::uint64 value);

  // required bool is_visible = 2;
  inline bool has_is_visible() const;
  inline void clear_is_visible();
  static const int kIsVisibleFieldNumber = 2;
  inline bool is_visible() const;
  inline void set_is_visible(bool value);

  // @@protoc_insertion_point(class_scope:oms.ComponentGraphics)
 private:
  inline void set_has_entity_id();
  inline void clear_has_entity_id();
  inline void set_has_is_visible();
  inline void clear_has_is_visible();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 entity_id_;
  bool is_visible_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();

  void InitAsDefaultInstance();
  static ComponentGraphics* default_instance_;
};
// -------------------------------------------------------------------

class Object_Component : public ::google::protobuf::Message {
 public:
  Object_Component();
  virtual ~Object_Component();

  Object_Component(const Object_Component& from);

  inline Object_Component& operator=(const Object_Component& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Object_Component& default_instance();

  void Swap(Object_Component* other);

  // implements Message ----------------------------------------------

  Object_Component* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Object_Component& from);
  void MergeFrom(const Object_Component& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .oms.ComponentType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::oms::ComponentType type() const;
  inline void set_type(::oms::ComponentType value);

  // optional .oms.ComponentScript script = 2;
  inline bool has_script() const;
  inline void clear_script();
  static const int kScriptFieldNumber = 2;
  inline const ::oms::ComponentScript& script() const;
  inline ::oms::ComponentScript* mutable_script();
  inline ::oms::ComponentScript* release_script();
  inline void set_allocated_script(::oms::ComponentScript* script);

  // @@protoc_insertion_point(class_scope:oms.Object.Component)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_script();
  inline void clear_has_script();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::oms::ComponentScript* script_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();

  void InitAsDefaultInstance();
  static Object_Component* default_instance_;
};
// -------------------------------------------------------------------

class Object : public ::google::protobuf::Message {
 public:
  Object();
  virtual ~Object();

  Object(const Object& from);

  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Object& default_instance();

  void Swap(Object* other);

  // implements Message ----------------------------------------------

  Object* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Object_Component Component;

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated float position = 3 [packed = true];
  inline int position_size() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline float position(int index) const;
  inline void set_position(int index, float value);
  inline void add_position(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      position() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_position();

  // repeated .oms.Object.Component components = 4;
  inline int components_size() const;
  inline void clear_components();
  static const int kComponentsFieldNumber = 4;
  inline const ::oms::Object_Component& components(int index) const;
  inline ::oms::Object_Component* mutable_components(int index);
  inline ::oms::Object_Component* add_components();
  inline const ::google::protobuf::RepeatedPtrField< ::oms::Object_Component >&
      components() const;
  inline ::google::protobuf::RepeatedPtrField< ::oms::Object_Component >*
      mutable_components();

  // @@protoc_insertion_point(class_scope:oms.Object)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< float > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::oms::Object_Component > components_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();

  void InitAsDefaultInstance();
  static Object* default_instance_;
};
// -------------------------------------------------------------------

class ObjectSet : public ::google::protobuf::Message {
 public:
  ObjectSet();
  virtual ~ObjectSet();

  ObjectSet(const ObjectSet& from);

  inline ObjectSet& operator=(const ObjectSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectSet& default_instance();

  void Swap(ObjectSet* other);

  // implements Message ----------------------------------------------

  ObjectSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectSet& from);
  void MergeFrom(const ObjectSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .oms.Object objects = 1;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 1;
  inline const ::oms::Object& objects(int index) const;
  inline ::oms::Object* mutable_objects(int index);
  inline ::oms::Object* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::oms::Object >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::oms::Object >*
      mutable_objects();

  // @@protoc_insertion_point(class_scope:oms.ObjectSet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::oms::Object > objects_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_objects_2eproto();
  friend void protobuf_AssignDesc_objects_2eproto();
  friend void protobuf_ShutdownFile_objects_2eproto();

  void InitAsDefaultInstance();
  static ObjectSet* default_instance_;
};
// ===================================================================


// ===================================================================

// ComponentScript

// required string class_name = 1;
inline bool ComponentScript::has_class_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComponentScript::set_has_class_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComponentScript::clear_has_class_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComponentScript::clear_class_name() {
  if (class_name_ != &::google::protobuf::internal::kEmptyString) {
    class_name_->clear();
  }
  clear_has_class_name();
}
inline const ::std::string& ComponentScript::class_name() const {
  return *class_name_;
}
inline void ComponentScript::set_class_name(const ::std::string& value) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(value);
}
inline void ComponentScript::set_class_name(const char* value) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(value);
}
inline void ComponentScript::set_class_name(const char* value, size_t size) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ComponentScript::mutable_class_name() {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    class_name_ = new ::std::string;
  }
  return class_name_;
}
inline ::std::string* ComponentScript::release_class_name() {
  clear_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = class_name_;
    class_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ComponentScript::set_allocated_class_name(::std::string* class_name) {
  if (class_name_ != &::google::protobuf::internal::kEmptyString) {
    delete class_name_;
  }
  if (class_name) {
    set_has_class_name();
    class_name_ = class_name;
  } else {
    clear_has_class_name();
    class_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint64 object_id = 2;
inline bool ComponentScript::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComponentScript::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComponentScript::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComponentScript::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 ComponentScript::object_id() const {
  return object_id_;
}
inline void ComponentScript::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// required string serializedObjectData = 3;
inline bool ComponentScript::has_serializedobjectdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComponentScript::set_has_serializedobjectdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComponentScript::clear_has_serializedobjectdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComponentScript::clear_serializedobjectdata() {
  if (serializedobjectdata_ != &::google::protobuf::internal::kEmptyString) {
    serializedobjectdata_->clear();
  }
  clear_has_serializedobjectdata();
}
inline const ::std::string& ComponentScript::serializedobjectdata() const {
  return *serializedobjectdata_;
}
inline void ComponentScript::set_serializedobjectdata(const ::std::string& value) {
  set_has_serializedobjectdata();
  if (serializedobjectdata_ == &::google::protobuf::internal::kEmptyString) {
    serializedobjectdata_ = new ::std::string;
  }
  serializedobjectdata_->assign(value);
}
inline void ComponentScript::set_serializedobjectdata(const char* value) {
  set_has_serializedobjectdata();
  if (serializedobjectdata_ == &::google::protobuf::internal::kEmptyString) {
    serializedobjectdata_ = new ::std::string;
  }
  serializedobjectdata_->assign(value);
}
inline void ComponentScript::set_serializedobjectdata(const char* value, size_t size) {
  set_has_serializedobjectdata();
  if (serializedobjectdata_ == &::google::protobuf::internal::kEmptyString) {
    serializedobjectdata_ = new ::std::string;
  }
  serializedobjectdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ComponentScript::mutable_serializedobjectdata() {
  set_has_serializedobjectdata();
  if (serializedobjectdata_ == &::google::protobuf::internal::kEmptyString) {
    serializedobjectdata_ = new ::std::string;
  }
  return serializedobjectdata_;
}
inline ::std::string* ComponentScript::release_serializedobjectdata() {
  clear_has_serializedobjectdata();
  if (serializedobjectdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serializedobjectdata_;
    serializedobjectdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ComponentScript::set_allocated_serializedobjectdata(::std::string* serializedobjectdata) {
  if (serializedobjectdata_ != &::google::protobuf::internal::kEmptyString) {
    delete serializedobjectdata_;
  }
  if (serializedobjectdata) {
    set_has_serializedobjectdata();
    serializedobjectdata_ = serializedobjectdata;
  } else {
    clear_has_serializedobjectdata();
    serializedobjectdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ComponentGraphics

// required uint64 entity_id = 1;
inline bool ComponentGraphics::has_entity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComponentGraphics::set_has_entity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComponentGraphics::clear_has_entity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComponentGraphics::clear_entity_id() {
  entity_id_ = GOOGLE_ULONGLONG(0);
  clear_has_entity_id();
}
inline ::google::protobuf::uint64 ComponentGraphics::entity_id() const {
  return entity_id_;
}
inline void ComponentGraphics::set_entity_id(::google::protobuf::uint64 value) {
  set_has_entity_id();
  entity_id_ = value;
}

// required bool is_visible = 2;
inline bool ComponentGraphics::has_is_visible() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComponentGraphics::set_has_is_visible() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComponentGraphics::clear_has_is_visible() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComponentGraphics::clear_is_visible() {
  is_visible_ = false;
  clear_has_is_visible();
}
inline bool ComponentGraphics::is_visible() const {
  return is_visible_;
}
inline void ComponentGraphics::set_is_visible(bool value) {
  set_has_is_visible();
  is_visible_ = value;
}

// -------------------------------------------------------------------

// Object_Component

// required .oms.ComponentType type = 1;
inline bool Object_Component::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Object_Component::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Object_Component::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Object_Component::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::oms::ComponentType Object_Component::type() const {
  return static_cast< ::oms::ComponentType >(type_);
}
inline void Object_Component::set_type(::oms::ComponentType value) {
  assert(::oms::ComponentType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .oms.ComponentScript script = 2;
inline bool Object_Component::has_script() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Object_Component::set_has_script() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Object_Component::clear_has_script() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Object_Component::clear_script() {
  if (script_ != NULL) script_->::oms::ComponentScript::Clear();
  clear_has_script();
}
inline const ::oms::ComponentScript& Object_Component::script() const {
  return script_ != NULL ? *script_ : *default_instance_->script_;
}
inline ::oms::ComponentScript* Object_Component::mutable_script() {
  set_has_script();
  if (script_ == NULL) script_ = new ::oms::ComponentScript;
  return script_;
}
inline ::oms::ComponentScript* Object_Component::release_script() {
  clear_has_script();
  ::oms::ComponentScript* temp = script_;
  script_ = NULL;
  return temp;
}
inline void Object_Component::set_allocated_script(::oms::ComponentScript* script) {
  delete script_;
  script_ = script;
  if (script) {
    set_has_script();
  } else {
    clear_has_script();
  }
}

// -------------------------------------------------------------------

// Object

// required uint64 id = 1;
inline bool Object::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Object::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Object::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Object::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Object::id() const {
  return id_;
}
inline void Object::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool Object::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Object::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Object::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Object::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Object::name() const {
  return *name_;
}
inline void Object::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Object::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Object::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Object::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Object::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Object::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated float position = 3 [packed = true];
inline int Object::position_size() const {
  return position_.size();
}
inline void Object::clear_position() {
  position_.Clear();
}
inline float Object::position(int index) const {
  return position_.Get(index);
}
inline void Object::set_position(int index, float value) {
  position_.Set(index, value);
}
inline void Object::add_position(float value) {
  position_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
Object::position() const {
  return position_;
}
inline ::google::protobuf::RepeatedField< float >*
Object::mutable_position() {
  return &position_;
}

// repeated .oms.Object.Component components = 4;
inline int Object::components_size() const {
  return components_.size();
}
inline void Object::clear_components() {
  components_.Clear();
}
inline const ::oms::Object_Component& Object::components(int index) const {
  return components_.Get(index);
}
inline ::oms::Object_Component* Object::mutable_components(int index) {
  return components_.Mutable(index);
}
inline ::oms::Object_Component* Object::add_components() {
  return components_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::oms::Object_Component >&
Object::components() const {
  return components_;
}
inline ::google::protobuf::RepeatedPtrField< ::oms::Object_Component >*
Object::mutable_components() {
  return &components_;
}

// -------------------------------------------------------------------

// ObjectSet

// repeated .oms.Object objects = 1;
inline int ObjectSet::objects_size() const {
  return objects_.size();
}
inline void ObjectSet::clear_objects() {
  objects_.Clear();
}
inline const ::oms::Object& ObjectSet::objects(int index) const {
  return objects_.Get(index);
}
inline ::oms::Object* ObjectSet::mutable_objects(int index) {
  return objects_.Mutable(index);
}
inline ::oms::Object* ObjectSet::add_objects() {
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::oms::Object >&
ObjectSet::objects() const {
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::oms::Object >*
ObjectSet::mutable_objects() {
  return &objects_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace oms

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::oms::ComponentType>() {
  return ::oms::ComponentType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_objects_2eproto__INCLUDED
